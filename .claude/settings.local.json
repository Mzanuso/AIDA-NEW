{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(findstr:*)",
      "Bash(npx tsc:*)",
      "Bash(git commit:*)",
      "Bash(npm run dev)",
      "Bash(rm:*)",
      "Bash(find:*)",
      "Bash(npm install:*)",
      "Read(//d/AIDA CLEAN OLD/AIDA-CLEAN/**)",
      "Bash(curl:*)",
      "Bash(taskkill:*)",
      "Bash(tasklist)",
      "Bash(netstat:*)",
      "Bash(if not exist \"D:\\AIDA-NEW\\client\\src\\components\\style\" mkdir \"D:\\AIDA-NEW\\client\\src\\components\\style\")",
      "Bash(cat:*)",
      "Bash(node:*)",
      "Bash(python:*)",
      "Bash(npx husky init:*)",
      "Bash(if not exist \"D:\\AIDA-NEW\\src\\utils\" mkdir \"D:\\AIDA-NEW\\src\\utils\")",
      "Bash(npm test:*)",
      "Bash(npm run validate:*)",
      "Read(//d/**)",
      "Bash(npm run type-check:*)",
      "Bash(npm run lint)",
      "Bash(git add:*)",
      "Bash(npm run test:*)",
      "Bash(cut:*)",
      "Bash(if not exist \"D:\\AIDA-NEW\\src\\agents\\visual-creator\" mkdir \"D:\\AIDA-NEW\\src\\agents\\visual-creator\")",
      "Bash(npm run test:run -- smart-router.test.ts)",
      "Bash(npm run test:run -- smart-router.test.ts --reporter=verbose)",
      "Bash(npm run test:run -- \"shared/types\")",
      "Bash(npm run test:run -- orchestrator)",
      "Bash(npm run test:run -- smart-router)",
      "Bash(git push origin main)",
      "Bash(powershell -Command \"npm run type-check 2>&1 | Select-String ''error TS'' | Measure-Object | Select-Object -ExpandProperty Count\")",
      "Bash(git fetch origin)",
      "Bash(git push origin main --force-with-lease)",
      "Bash(git push origin main --force-with-lease --no-verify)",
      "Bash(git push origin main --no-verify)",
      "Bash(npm run test:run -- __tests__/visual-creator-executor.test.ts)",
      "Bash(npm run test:run -- __tests__/integration/visual-creator-pipeline.test.ts)",
      "Bash(git mv src/agents/visual-creator/visual-creator-bridge.ts src/shared/coordination/execution-bridge.ts)",
      "Bash(git mv src/agents/visual-creator/smart-router.ts src/shared/coordination/smart-router.ts)",
      "Bash(git mv src/agents/visual-creator/workflow-orchestrator.ts src/shared/coordination/workflow-orchestrator.ts)",
      "Bash(git mv src/agents/visual-creator/model-catalog.ts src/shared/coordination/model-catalog.ts)",
      "Bash(git mv shared/types/project-brief.types.ts src/shared/types/project-brief.types.ts)",
      "Bash(git mv shared/types/budget-constraints.types.ts src/shared/types/budget-constraints.types.ts)",
      "Bash(npm run test:run -- __tests__/technical-planner.test.ts)",
      "Bash(git mv __tests__/visual-creator-bridge.test.ts __tests__/execution-bridge.test.ts)",
      "Bash(npm run test:run:*)"
    ],
    "deny": [],
    "ask": []
  }
}
