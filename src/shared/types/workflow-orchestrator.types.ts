/**
 * Workflow Orchestrator Types
 * 
 * Defines execution plans, steps, and results for multi-step image generation workflows.
 * 
 * @module agents/visual-creator/workflow-orchestrator
 */

import type { WorkflowType } from '../../shared/types/model-strategy.types';

/**
 * Single step in a workflow execution plan
 */
export interface WorkflowStep {
  /**
   * Unique step identifier
   * @example "step-001", "base-generation", "text-overlay"
   */
  stepId: string;

  /**
   * Model to use for this step
   * @example "flux-pro-1.1", "ideogram-v2"
   */
  model: string;

  /**
   * Model-specific optimized prompt (already translated by Prompt Adapter)
   */
  prompt: string;

  /**
   * Model-specific parameters
   * @example { "aspect_ratio": "16:9", "num_inference_steps": 50 }
   */
  parameters?: Record<string, any>;

  /**
   * Reference images for this step (URLs or identifiers)
   * Used for consistency workflows or compositing
   */
  referenceImages?: string[];

  /**
   * Step IDs that must complete before this step can start
   * @example ["step-001"] for a text overlay that needs base image
   */
  dependencies?: string[];

  /**
   * Estimated cost for this step (USD)
   */
  estimatedCost: number;

  /**
   * Estimated time for this step (seconds)
   */
  estimatedTime: number;
}

/**
 * Complete workflow execution plan
 * 
 * Generated by Workflow Orchestrator, sent to API execution layer.
 */
export interface WorkflowExecutionPlan {
  /**
   * Unique workflow execution identifier
   */
  workflowId: string;

  /**
   * Type of workflow being executed
   */
  workflowType: WorkflowType;

  /**
   * Ordered array of execution steps
   */
  steps: WorkflowStep[];

  /**
   * Total estimated execution time (seconds)
   * Sum of all step times considering parallelization
   */
  estimatedTime: number;

  /**
   * Total estimated cost (USD)
   * Sum of all step costs
   */
  estimatedCost: number;

  /**
   * Human-readable explanation of workflow plan
   * @example "Single FLUX Pro generation for premium portrait"
   * @example "3-step consistency workflow using Seedream 4.0 with character preservation"
   */
  reasoning: string;

  /**
   * Timestamp when plan was created (ISO 8601)
   */
  createdAt: string;
}

/**
 * Status of workflow execution
 */
export type WorkflowStatus = 
  | 'pending'      // Waiting to start
  | 'running'      // Currently executing
  | 'completed'    // Successfully finished
  | 'failed'       // Encountered error
  | 'cancelled';   // Manually stopped

/**
 * Result of a completed workflow step
 */
export interface WorkflowStepResult {
  /**
   * Step identifier
   */
  stepId: string;

  /**
   * Execution status
   */
  status: WorkflowStatus;

  /**
   * Generated image URL(s)
   */
  imageUrls?: string[];

  /**
   * Actual execution time (seconds)
   */
  actualTime?: number;

  /**
   * Actual cost incurred (USD)
   */
  actualCost?: number;

  /**
   * Error message if failed
   */
  error?: string;

  /**
   * Timestamp when step completed (ISO 8601)
   */
  completedAt?: string;
}

/**
 * Complete workflow execution result
 */
export interface WorkflowResult {
  /**
   * Workflow identifier
   */
  workflowId: string;

  /**
   * Overall workflow status
   */
  status: WorkflowStatus;

  /**
   * Results for each step
   */
  stepResults: WorkflowStepResult[];

  /**
   * All generated image URLs (flattened from all steps)
   */
  allImageUrls: string[];

  /**
   * Total actual execution time (seconds)
   */
  totalTime?: number;

  /**
   * Total actual cost (USD)
   */
  totalCost?: number;

  /**
   * Timestamp when workflow started (ISO 8601)
   */
  startedAt: string;

  /**
   * Timestamp when workflow completed (ISO 8601)
   */
  completedAt?: string;
}
